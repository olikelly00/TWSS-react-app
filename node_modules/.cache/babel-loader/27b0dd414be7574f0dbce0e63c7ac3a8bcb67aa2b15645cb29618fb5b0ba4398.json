{"ast":null,"code":"var _jsxFileName = \"/Users/olikelly/Documents/Coding/school_of_code/api-fueled-react-app/shakespeare-shuffle/src/components/body.js\";\nimport React from 'react';\nimport quotes from \"../quotes.json\";\nimport \"./body.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function WebpageBody() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"webpageBody\",\n      children: /*#__PURE__*/_jsxDEV(QuoteContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n// function fetchWeather(city) {\n//     const url = ``\n\n//     fetch(url)\n//       .then(response => response.json()) // Parse the JSON response\n//       .then(data => {\n//         console.log(data); // This is where you would use the weather data in your app\n//       })\n//       .catch(error => console.error(error)); // Handle any errors\n//   }\n_c = WebpageBody;\nexport function QuoteContainer() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: quotes.map(quote => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quoteContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quoteItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: quote.quote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"quoteAuthor\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [quote.author, \" (b. \", quote.birth_year, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 48\n          }, this), \", \", quote.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this))\n  }, void 0, false);\n}\n_c2 = QuoteContainer;\nvar _c, _c2;\n$RefreshReg$(_c, \"WebpageBody\");\n$RefreshReg$(_c2, \"QuoteContainer\");","map":{"version":3,"names":["React","quotes","jsxDEV","_jsxDEV","Fragment","_Fragment","WebpageBody","children","className","QuoteContainer","fileName","_jsxFileName","lineNumber","columnNumber","_c","map","quote","author","birth_year","description","_c2","$RefreshReg$"],"sources":["/Users/olikelly/Documents/Coding/school_of_code/api-fueled-react-app/shakespeare-shuffle/src/components/body.js"],"sourcesContent":["import React from 'react';\nimport quotes from \"../quotes.json\";\nimport \"./body.css\";\n\nexport default function WebpageBody() {\n    return (\n        <>\n        <section className=\"webpageBody\"> \n        {<QuoteContainer/>}\n        </section>\n        </>\n    )\n}\n\n// function fetchWeather(city) {\n//     const url = ``\n  \n//     fetch(url)\n//       .then(response => response.json()) // Parse the JSON response\n//       .then(data => {\n//         console.log(data); // This is where you would use the weather data in your app\n//       })\n//       .catch(error => console.error(error)); // Handle any errors\n//   }\n\nexport function QuoteContainer() {\n    \n    return (\n        <>\n        {quotes.map((quote) => (\n            <div className=\"quoteContainer\">\n                <div className=\"quoteItem\">\n                    <p>{quote.quote}</p>\n                    <p className=\"quoteAuthor\"><strong>{quote.author} (b. {quote.birth_year})</strong>, {quote.description}</p>\n                    </div>\n                </div>\n            ))}\n        \n        </>\n        \n    )\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpB,eAAe,SAASC,WAAWA,CAAA,EAAG;EAClC,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACAJ,OAAA;MAASK,SAAS,EAAC,aAAa;MAAAD,QAAA,eAC/BJ,OAAA,CAACM,cAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT;EAAC,gBACR,CAAC;AAEX;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAC,EAAA,GAnBwBR,WAAW;AAqBnC,OAAO,SAASG,cAAcA,CAAA,EAAG;EAE7B,oBACIN,OAAA,CAAAE,SAAA;IAAAE,QAAA,EACCN,MAAM,CAACc,GAAG,CAAEC,KAAK,iBACdb,OAAA;MAAKK,SAAS,EAAC,gBAAgB;MAAAD,QAAA,eAC3BJ,OAAA;QAAKK,SAAS,EAAC,WAAW;QAAAD,QAAA,gBACtBJ,OAAA;UAAAI,QAAA,EAAIS,KAAK,CAACA;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpBV,OAAA;UAAGK,SAAS,EAAC,aAAa;UAAAD,QAAA,gBAACJ,OAAA;YAAAI,QAAA,GAASS,KAAK,CAACC,MAAM,EAAC,OAAK,EAACD,KAAK,CAACE,UAAU,EAAC,GAAC;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,MAAE,EAACG,KAAK,CAACG,WAAW;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR;EAAC,gBAEJ,CAAC;AAGX;AAACO,GAAA,GAhBeX,cAAc;AAAA,IAAAK,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}