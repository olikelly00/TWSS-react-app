{"ast":null,"code":"var _jsxFileName = \"/Users/olikelly/Documents/Coding/school_of_code/api-fueled-react-app/src/components/WebpageBody.jsx\",\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport \"./WebpageBody.css\";\n\n// This function returns the main body of the webpage, including the search field for user input and search results / no results message. \nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function WebpageBody() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [quoteData, setQuoteData] = useState([]);\n  const [filteredQuotes, setFilteredQuotes] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:10000/quotes');\n        let data = await response.json();\n        if (typeof data === 'string') {\n          data = JSON.parse(data);\n        }\n        setQuoteData(data);\n        setFilteredQuotes(data);\n      } catch (error) {\n        console.error('Error fetching quotes:', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // This function returns a filered list of quotes based on the user's search terms\n\n  // const filterResults = (searchTerm) => {\n\n  //     return quoteData.filter(quote => \n  //         quote.quote.toLowerCase().includes(searchTerm.toLowerCase()) ||\n  //         quote.author.toLowerCase().includes(searchTerm.toLowerCase()) ||\n  //         String(quote.birth_year).includes(searchTerm) ||\n  //         quote.description.toLowerCase().includes(searchTerm.toLowerCase())\n  //     );\n  // };\n\n  const filterResults = searchTerm => {\n    _s();\n    if (!Array.isArray(quoteData)) {\n      console.error('quoteData is not an array:', quoteData);\n      return [];\n    }\n    console.log(quoteData);\n    const [search, setSearch] = useState(\"\");\n    const handleSearch = event => {\n      const value = event.target.value;\n      setSearch(value);\n    };\n    const handleSubmit = event => {\n      event.preventDefault();\n      const results = filterResults(search);\n      setFilteredQuotes(results);\n    };\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"webpageBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Looking for something in particular? Search our treasure trove of quotes below:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"searchForm\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"searchBar\",\n            type: \"text\",\n            name: \"search\",\n            value: search,\n            onChange: event => handleSearch(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), filteredQuotes.length > 0 ? /*#__PURE__*/_jsxDEV(QuoteContainer, {\n        quotes: filteredQuotes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 14\n      }, this) : /*#__PURE__*/_jsxDEV(NoResults, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this);\n  };\n\n  // This function returns all the quotes (if no search terms have been given by the user) or any quotes that match the user's search parameters. \n  _s(filterResults, \"42GASUL8pX2/N6Oh5HTh0GvQEF0=\");\n  function QuoteContainer({\n    quotes\n  }) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: quotes.map((quote, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quoteContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quoteItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: quote.quote\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"quoteAuthor\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [quote.author, \" (b. \", quote.birth_year, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 48\n            }, this), \", \", quote.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this))\n    }, void 0, false);\n  }\n}\n\n// This function returns a 'no results' message and is rendered if no quotes matching the user's search criteria are found. \n_s2(WebpageBody, \"qnoKtGxTz4ZP4DTH/2UgOxeQZUY=\");\n_c = WebpageBody;\nfunction NoResults() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Sorry, we don't have quotes for that yet \\uD83D\\uDE14 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Why not try another search?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c2 = NoResults;\nfunction Loading() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Bear with us.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"We're putting together our favourite quotes for you.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c3 = Loading;\nfunction RequestFailed() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"It's not you, it's us.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Sorry, we're having some trouble getting quotes right now. Please try again later.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c4 = RequestFailed;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"WebpageBody\");\n$RefreshReg$(_c2, \"NoResults\");\n$RefreshReg$(_c3, \"Loading\");\n$RefreshReg$(_c4, \"RequestFailed\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","WebpageBody","_s2","_s","$RefreshSig$","quoteData","setQuoteData","filteredQuotes","setFilteredQuotes","fetchData","response","fetch","data","json","JSON","parse","error","console","filterResults","searchTerm","Array","isArray","log","search","setSearch","handleSearch","event","value","target","handleSubmit","preventDefault","results","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","onChange","length","QuoteContainer","quotes","NoResults","map","quote","index","author","birth_year","description","_c","_c2","Loading","_c3","RequestFailed","_c4","$RefreshReg$"],"sources":["/Users/olikelly/Documents/Coding/school_of_code/api-fueled-react-app/src/components/WebpageBody.jsx"],"sourcesContent":["import React from 'react';\nimport {useEffect, useState} from 'react';\nimport \"./WebpageBody.css\";\n\n\n\n// This function returns the main body of the webpage, including the search field for user input and search results / no results message. \n\nexport default function WebpageBody() {\n\n    const [quoteData, setQuoteData] = useState([]);\n    const [filteredQuotes, setFilteredQuotes] = useState([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await fetch('http://localhost:10000/quotes');\n                let data = await response.json();\n\n                if (typeof data === 'string') {\n                    data = JSON.parse(data);\n                }\n\n                setQuoteData(data);\n                setFilteredQuotes(data);\n            } catch (error) {\n                console.error('Error fetching quotes:', error);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n\n\n\n\n\n// This function returns a filered list of quotes based on the user's search terms\n\n\n// const filterResults = (searchTerm) => {\n\n//     return quoteData.filter(quote => \n//         quote.quote.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//         quote.author.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//         String(quote.birth_year).includes(searchTerm) ||\n//         quote.description.toLowerCase().includes(searchTerm.toLowerCase())\n//     );\n// };\n\nconst filterResults = (searchTerm) => {\n    if (!Array.isArray(quoteData)) {\n        console.error('quoteData is not an array:', quoteData);\n        return [];\n    }\n\nconsole.log(quoteData)\n\n    const [search, setSearch] = useState(\"\");\n\n    const handleSearch = (event) => {\n        const value = event.target.value;\n        setSearch(value)\n      }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const results = filterResults(search)\n        setFilteredQuotes(results);\n    };\n\n    return (\n        <section className=\"webpageBody\"> \n            <p>Looking for something in particular? Search our treasure trove of quotes below:</p>\n            <form className=\"searchForm\" onSubmit={handleSubmit}> \n            <label>\n                <input \n                className=\"searchBar\"\n                type=\"text\" \n                name=\"search\" \n                value={search} \n                onChange={(event) => handleSearch(event)}\n                    />\n            </label>\n            <button className=\"submit-button\" type=\"submit\">Search</button>\n            </form>\n       \n        {filteredQuotes.length > 0? (\n             <QuoteContainer quotes={filteredQuotes}/>) : (\n             <NoResults />\n            )}\n        </section>\n    )\n}\n\n\n// This function returns all the quotes (if no search terms have been given by the user) or any quotes that match the user's search parameters. \n\nfunction QuoteContainer({quotes}) {\n\n        return (\n        <>\n        {quotes.map((quote, index) => (\n            <div key={index} className=\"quoteContainer\">\n                <div className=\"quoteItem\">\n                    <p>{quote.quote}</p>\n                    <p className=\"quoteAuthor\"><strong>{quote.author} (b. {quote.birth_year})</strong>, {quote.description}</p>\n                    </div>\n                </div>\n\n            ))}\n            \n        </>\n        \n    )\n}\n}\n\n// This function returns a 'no results' message and is rendered if no quotes matching the user's search criteria are found. \n\nfunction NoResults() {\n    return (\n        <>\n        <h4>Sorry, we don't have quotes for that yet 😔 </h4>\n        <p>Why not try another search?</p></>\n    )\n}\n\n\nfunction Loading() {\n    return (\n        <>\n        <h4>Bear with us.</h4>\n        <p>We're putting together our favourite quotes for you.</p>\n        </>\n    )\n}\n\nfunction RequestFailed() {\n    return (\n        <>\n        <h4>It's not you, it's us.</h4>\n        <p>Sorry, we're having some trouble getting quotes right now. Please try again later.</p>\n        </>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}